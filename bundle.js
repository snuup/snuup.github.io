'use strict';

var preact = require('preact');
var rendertostring = require('preact-render-to-string');
var fs = require('fs');
var path = require('path');
var prettier = require('prettier');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var rendertostring__default = /*#__PURE__*/_interopDefaultLegacy(rendertostring);
var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var prettier__default = /*#__PURE__*/_interopDefaultLegacy(prettier);

// preact
var Project;
(function (Project) {
    Project["ViennaGeo"] = "viennageo";
    Project["TV"] = "tv";
    Project["FFoqsi"] = "ffoqsi";
    Project["Discretelogics"] = "discretelogics";
    Project["FileStructureWindow"] = "toolwindow";
    Project["Klimpt"] = "klimpt";
    Project["TacidoNotes"] = "tacidonotes";
    Project["Sputnik4"] = "sputnik4";
    Project["BA"] = "ba";
    Project["Chroma"] = "chroma";
})(Project || (Project = {}));
function render(h, filename, title) {
    let html = fs__default['default'].readFileSync("./src/template.html").toString();
    let page = rendertostring__default['default'](h());
    html = html.replace("{children}", page).replace("{title}", title);
    let htmlf = prettier__default['default'].format(html, { parser: 'html' });
    filename = './docs/' + filename;
    fs__default['default'].mkdirSync(path__default['default'].dirname(filename), { recursive: true });
    fs__default['default'].writeFileSync(filename, htmlf);
    console.log('wrote', filename);
}
// n.trim = test for string type
function cc(...names) {
    return names.flatMap((n) => (n.trim ? n : Object.keys(n).filter((k) => n[k]))).join(' '); // n.trim detects strings
}

let FAGithub = () => (preact.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 496 512", class: "fa-github" },
    preact.h("path", { d: "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z" })));
let GithubLink = ({ href, children }) => (preact.h(preact.Fragment, null,
    preact.h(FAGithub, null),
    ' ',
    preact.h("a", { href: href, target: "_self" }, children)));
let FAExternal = () => (preact.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512", class: "fa-external" },
    preact.h("path", { d: "M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z" })));
let ExternalLink = ({ href, children }) => (preact.h("span", null,
    preact.h(FAExternal, null),
    ' ',
    preact.h("a", { href: href, target: "_self" }, children)));
let InlineLink = ({ href, children }) => (preact.h("span", null,
    preact.h("a", { href: href, target: "_self" }, children)));
let FAFilePdf = () => (preact.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 384 512", class: "fa-pdf" },
    preact.h("path", { d: "M181.9 256.1c-5-16-4.9-46.9-2-46.9 8.4 0 7.6 36.9 2 46.9zm-1.7 47.2c-7.7 20.2-17.3 43.3-28.4 62.7 18.3-7 39-17.2 62.9-21.9-12.7-9.6-24.9-23.4-34.5-40.8zM86.1 428.1c0 .8 13.2-5.4 34.9-40.2-6.7 6.3-29.1 24.5-34.9 40.2zM248 160h136v328c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V24C0 10.7 10.7 0 24 0h200v136c0 13.2 10.8 24 24 24zm-8 171.8c-20-12.2-33.3-29-42.7-53.8 4.5-18.5 11.6-46.6 6.2-64.2-4.7-29.4-42.4-26.5-47.8-6.8-5 18.3-.4 44.1 8.1 77-11.6 27.6-28.7 64.6-40.8 85.8-.1 0-.1.1-.2.1-27.1 13.9-73.6 44.5-54.5 68 5.6 6.9 16 10 21.5 10 17.9 0 35.7-18 61.1-61.8 25.8-8.5 54.1-19.1 79-23.2 21.7 11.8 47.1 19.5 64 19.5 29.2 0 31.2-32 19.7-43.4-13.9-13.6-54.3-9.7-73.6-7.2zM377 105L279 7c-4.5-4.5-10.6-7-17-7h-6v128h128v-6.1c0-6.3-2.5-12.4-7-16.9zm-74.1 255.3c4.1-2.7-2.5-11.9-42.8-9 37.1 15.8 42.8 9 42.8 9z" })));
let PDFLink = ({ href, children }) => (preact.h("span", null,
    preact.h(FAFilePdf, null),
    ' ',
    preact.h("a", { href: href, target: "extern" }, children)));
let Tags = ({ children }) => (preact.h("p", { class: "tags" }, children.split(/\s/).map((tag) => (preact.h("span", null,
    "#",
    tag,
    " ")))));
let GalleryLink = ({ img, classname, alt }) => (preact.h("div", { class: "gallerylink" },
    preact.h("img", { src: img, onClick: "opengallery(this)", class: classname || 'img-3-2', alt: alt }),
    preact.h(FAExternal, null)));
let Section = ({ children, project, header }) => (preact.h("section", { id: project },
    preact.h("div", { class: "bg" }),
    preact.h("h3", null,
        preact.h("div", null, header),
        preact.h("div", null)),
    preact.h("div", { class: "content" },
        preact.h("h3", null, header),
        children)));
let Overview = () => (preact.h("article", { id: "overview" },
    preact.h("header", null,
        preact.h("h1", null, "works"),
        preact.h("h2", null,
            preact.h("p", null, "computer science"),
            preact.h("p", null, "human computer interaction"),
            preact.h("p", null, "craft")),
        preact.h("cite", null,
            preact.h("p", null, "warum gro\u00DFschreiben wenn man nicht gro\u00DF sprechen kann?"),
            preact.h("p", null, "why write uppercase if one cannot speak uppercase?"),
            preact.h("p", null,
                preact.h("br", null),
                "(bauhaus)"))),
    preact.h(Section, { project: Project.TV, header: "tv production" },
        preact.h(Tags, null, "hci application mobile web agile"),
        preact.h("p", null, "tv production at speed, daily media. the well-tried production workflow should be adapted to modern technology. a serious challenge, since the efficiency of the huge planning board on the wall was hard to beat."),
        preact.h("p", null,
            "on every project start i recall what professor david cheriton",
            ' ',
            preact.h(InlineLink, { href: "http://web.stanford.edu/class/cs249a/" }, "taught"),
            " us about software projects: 50% never complete, 30% are never used, 20% succeed. here i identified the risk to fall into the 30 pie, because we face the high benchmark of the current workflow and also need to cope with the transition effort."),
        preact.h("p", null, "i considered the organisatorial aspects of human computer interaction (hci) critical. participatory design, attention on critical roles in the production workflow and perfect collaboration between all involved lead to success - we landed safely in the center of the 20 pie."),
        preact.h("p", null, "the tool immediately became the indispensable information system for the (partly remote) team. production planning and tv programming by drag-and-drop is now available on phones, pads and web. 48578 production items have been entered while these letters were written."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/f_auto,h_230,w_345/v1629150958/tv-large-2", alt: "tv application small" })),
    preact.h(Section, { project: Project.FFoqsi, header: "ffoqsi" },
        preact.h(Tags, null, "web static-site-generator asp.net razor"),
        preact.h("p", null,
            preact.h(ExternalLink, { href: "https://www.ffoqsi.at/" }, "www.ffoqsi.at")),
        preact.h("p", null, "ffoqsi communicates its research on food quality and safety with a static web page that is updated every few weeks."),
        preact.h("p", null, "i suggested a static site generator setup where they update markdown files in visual studio code. inside markdown, html tag components make it easy to include content blocks like team members or photo collections. no available static site generator fullfilled the needs, so i wrote 'foxygen' in asp.net and razor."),
        preact.h("p", null, "i was prepared to convert the page into a usual cms based solution if this way of site maintenance would be to raw for them - at my risk. but the opposite happened. all ffoqsi people involved in site updates gave very positive feedback and said that this way is much better than other tools they used before. convenience features like 1-click publishing to github via a browser bookmark have added to that. static site gens proved applicable beyond the developer community."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/c_lfill,g_north,h_220,w_330,f_auto/v1628151278/ffoqsi-small", alt: "ffoqsi webpage small" })),
    preact.h(Section, { project: Project.Discretelogics, header: "discretelogics" },
        preact.h(Tags, null, "c++ csharp python wpf ui high-performance"),
        preact.h("p", null,
            preact.h(GithubLink, { href: "https://github.com/discretelogics/TeaFiles.Net" }, "teafiles.net"),
            preact.h("br", null),
            preact.h(GithubLink, { href: "https://github.com/discretelogics/TeaFiles.Cpp" }, "teafiles.c++"),
            preact.h("br", null),
            preact.h(GithubLink, { href: "https://github.com/discretelogics/" }, "github"),
            preact.h("br", null),
            preact.h(ExternalLink, { href: "http://discretelogics.com" }, "website")),
        preact.h("p", null, "since time series storage is usually append only, persistence in plain files is a first choice. simple and fast. with the advent of 64bit address spaces, high performance processing of big data frequently utilizes file storage together with memory mapping."),
        preact.h("p", null,
            "defined the ",
            preact.h(InlineLink, { href: "http://discretelogics.com/resources/teafilespec/" }, "teafiles"),
            " file format, that enables inclusion of metadata at the begin of such file to make larger collections of files holding raw structs managable."),
        preact.h("p", null, "wrote teashell for easy data file browsing inside windows explorer. founded a company for tools around teafiles. with my cofounder wrote teahouse for efficient visualisation of very large data files."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/h_220,w_330,f_auto/v1628151278/teahouse-small", alt: "teahouse screenshot small" })),
    preact.h(Section, { project: Project.ViennaGeo, header: "vienna geo" },
        preact.h(Tags, null, "responsive web page"),
        preact.h("p", null,
            preact.h(ExternalLink, { href: "https://viennageo.github.io" }, "website"),
            preact.h("br", null),
            preact.h(GithubLink, { href: "https://github.com/viennageo/viennageo.github.io" }, "repository")),
        preact.h("p", null, "i founded und run a local meetup where we get all people involved in geo-information systems together to share experiences."),
        preact.h("p", null, "the meetup's web page is pure static and hosted at github. i author it with a self written static site generator, that consists of 10 lines javascript and allows html componentisation via jsx."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/h_220,w_330,f_auto/v1628151278/viennageo", alt: "viennageo web page" })),
    preact.h(Section, { project: Project.FileStructureWindow, header: "f# file structure" },
        preact.h(Tags, null, "fsharp .net open-source vs-extension wpf"),
        preact.h("p", null,
            preact.h(GithubLink, { href: "https://github.com/snuup/FSharp-File-Structure-for-Visual-Studio" }, "source code")),
        preact.h("p", null, "f# is my favorite programming language. succinct expression of computations, superb domain modeling, a responsive pragmatic community around the best language designer and its interactive mode sets it apart from all other performant static typed languages. i find the latter indispensable for the design and analysis of complex algorithms."),
        preact.h("p", null,
            "i am used to keep overview of code files with file structure windows (document outlines). visual studio lacked such window for f#, so i digged into the f# language service and built one. it is quick and a bit rough but satisfies my needs. no tests, just usage. positive community feedback on\u00A0",
            preact.h(InlineLink, { href: "https://twitter.com/xosfaere/status/1262701565179310082" }, "twitter"),
            " and\u00A0",
            preact.h(InlineLink, { href: "https://marketplace.visualstudio.com/items?itemName=snuup.FSharpFileStructure&ssr=false#review-details" }, "vs marketplace"),
            "."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/c_crop,h_200,w_300,x_10,y_28,f_auto/v1628151278/fsharpfilestruct-small", alt: "f# filestructure toolwindow small" })),
    preact.h(Section, { project: Project.Klimpt, header: "responsive webpages" },
        preact.h(Tags, null, "web mobile responsive"),
        preact.h("p", null,
            preact.h(ExternalLink, { href: "http://www.psychiater-klimpt.at/" }, "psychiater-klimpt.at"),
            preact.h("br", null),
            preact.h(ExternalLink, { href: "http://www.psychologiezentrum.at/" }, "psychologiezentrum.at")),
        preact.h("p", null, "when i take the underground into the city, the mobile network breaks down after 3 stations. navigating websites halts."),
        preact.h("p", null, "<link rel=\"preload\"> mitigates such outages. when writing mobile web pages for 2 doctors i went further."),
        preact.h("p", null,
            "the best navigation on small devices is scrolling - the whole screen is the handle for this gesture. since all content could fit on a single page here, the mobile version is a ",
            preact.h("b", null, "single page"),
            ", the user navigates by scrolling up and down. soft background colors distinguish the sections while scrolling."),
        preact.h("p", null,
            "the ",
            preact.h("b", null, "desktop version"),
            " has one page per section but also loads in a single fetch. smooth transitions convey empathic human feeling. their fast speed (300ms) reflects the doctors determination to immediately act on patients concerns."),
        preact.h("div", { style: "text-align:right" },
            preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/f_auto,h_330,w_330/v1628151278/docpages-small", alt: "responsive webpages screenshots small", classname: "img-1-1" }))),
    preact.h(Section, { project: Project.TacidoNotes, header: "tacido notes" },
        preact.h(Tags, null, "typescript viennajs"),
        preact.h("p", null,
            preact.h(GithubLink, { href: "https://github.com/snuup/tacidonotes" }, "repository"),
            preact.h("br", null),
            preact.h(PDFLink, { href: "https://snuup.github.io/tacidonotes/tacido%20notes.pdf" }, "presentation")),
        preact.h("p", null,
            "combined the javascript client of dropbox, stanford javascript crypto library and a simple note editor/reader utilising browsers contenteditable into a ",
            preact.h("b", null, "client side encrypting note taking app"),
            ". presented at the vienna js meetup. won a rasperry pie for best talk ;)"),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/c_lfill,h_220,w_330,e_contrast:25,f_auto/v1628151278/tacido-notes-small", alt: "tacido notes presentation image" })),
    preact.h(Section, { project: Project.Sputnik4, header: "sputnik4" },
        preact.h(Tags, null, "mobile recommendations readwriteweb collaboration design hci research .net csharp c++ javascript css"),
        preact.h("p", null, "before apple enabled the internet on phones, when phones and the web converged just so far, i invented, designed and implemented a recom\u00ADmendation service targeted at mobile devices. implemented a cor\u00ADrelation engine engine that com\u00ADputes results in single mil\u00ADli\u00ADsecond range via in memory computation."),
        preact.h("p", null,
            "started as a student project in ",
            preact.h(InlineLink, { href: "http://web.stanford.edu/class/cs249a/" }, "cs249"),
            " as an open collabo\u00ADrative filtering system - \"recommendations in social context\"."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/f_auto,c_crop,g_north,h_300,w_450,y_54/v1628268626/sputnik4-phones-small", alt: "sputnik4 mobile phones picture" })),
    preact.h(Section, { project: Project.BA, header: "realtime analytics" },
        preact.h(Tags, null, "ui c++ realtime"),
        preact.h("p", null, "developed an analytics application for traders in a team of 5. wrote the realtime quoteboard and news feed but in particular the market profile, a specific analytics view used by derivative traders. for the complex visualisation wrote a widget library, that provides core functionalities like hittesting or roll hover effects in c++ . introduced clean object oriented design and model view controller architecture."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/q_90,w_300,h_200,f_auto/v1628151278/realtime-analytics-application-small-large", alt: "realtime analytics application screenshot small" })),
    preact.h(Section, { project: Project.Chroma, header: "chroma midi interface" },
        preact.h(Tags, null, "hardware software 6502"),
        preact.h("p", null, "the legendary rhodes chroma synthesizer has a computer interface but no midi, the standard that arrived after its production."),
        preact.h("p", null, "i was asked to create a midi interface. after organizing technical documents soldered a parallel interface and a midi hardware interface for the commodore vic 20 (mind the \u03C62 line of the 6502 cpu). wrote software in machine language using raw mnemonics."),
        preact.h("p", null, "adapted hard- and software for the rockwell 6511eab singlechip microcontroller. without an unaffordable emulator this was a blind flight but after erasing the eprom a hundred times with my parents sunray lamp it worked perfect. and it does since falco's first world tour. until today."),
        preact.h(GalleryLink, { img: "https://res.cloudinary.com/snuu/image/upload/f_auto,q_90,w_300,h_200,e_sepia:80/v1628151278/chroma-synthesizer-opened", alt: "rhodes chrome synthesizer opened" }))));

let Link = ({ children }) => {
    let href = children;
    let text = href.replace(/^https?:\/\/(www\.)?/, '');
    return (preact.h("a", { href: href, target: "_self" }, text));
};
let FullImg = (attrs) => (preact.h("div", { class: "imgcontainer", onClick: "toggleexplain()" },
    preact.h("img", { ...attrs, src: "/img/blank.gif", "data-src": attrs.src, alt: attrs.alt || '' })));
let Nav = ({ projname, total, current }) => {
    total ??= 0;
    current ??= 0;
    let cn = [];
    if (total > 1) {
        for (let i = 1; i <= total; i++) {
            cn.push(preact.h("span", { class: cc('num', current != 1 && i != current && 'hide', i > current && 'fut') }, i));
        }
    }
    return (preact.h("nav", { style: `width:${(total - current + 1) * 100}vw` },
        preact.h("div", { class: "sticky" },
            preact.h("span", { class: cc('pro', current > 1 && 'hide') }, projname),
            cn)));
};
// to create an inner border, need 2 divs
let Explain = ({ children }) => (preact.h("div", { class: "explainbox", onClick: "toggleexplain()" },
    preact.h("div", { class: "explain" }, children)));
let Buttons = () => (preact.h(preact.Fragment, null,
    preact.h("svg", { id: "btnclose", viewBox: "0 0 100 100", xmlns: "http://www.w3.org/2000/svg" },
        preact.h("line", { x1: "0", y1: "0", x2: "100", y2: "100" }),
        preact.h("line", { x1: "100", y1: "0", x2: "0", y2: "100" })),
    preact.h("div", { id: "leftfield" },
        preact.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512", width: "44px", height: "44px", id: "btnleft", class: "chevron" },
            preact.h("path", { d: "M256 504C119 504 8 393 8 256S119 8 256 8s248 111 248 248-111 248-248 248zM142.1 273l135.5 135.5c9.4 9.4 24.6 9.4 33.9 0l17-17c9.4-9.4 9.4-24.6 0-33.9L226.9 256l101.6-101.6c9.4-9.4 9.4-24.6 0-33.9l-17-17c-9.4-9.4-24.6-9.4-33.9 0L142.1 239c-9.4 9.4-9.4 24.6 0 34z" }))),
    preact.h("div", { id: "rightfield" },
        preact.h("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 512 512", width: "44px", height: "44px", id: "btnright", class: "chevron" },
            preact.h("path", { d: "M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm113.9 231L234.4 103.5c-9.4-9.4-24.6-9.4-33.9 0l-17 17c-9.4 9.4-9.4 24.6 0 33.9L285.1 256 183.5 357.6c-9.4 9.4-9.4 24.6 0 33.9l17 17c9.4 9.4 24.6 9.4 33.9 0L369.9 273c9.4-9.4 9.4-24.6 0-34z" })))));
let KeyMapDescription = ({ children, op, keys }) => (preact.h("tr", null,
    preact.h("td", null, op),
    preact.h("td", null, children),
    preact.h("td", null, keys.split(' ').map((key) => (preact.h("kbd", null, key))))));
// add sections requires adaptation of the stylesheet: grid-template-columns: repeat(23, 100vw);
let Gallery = () => (preact.h(preact.Fragment, null,
    preact.h("article", { id: "gallery" },
        preact.h(Buttons, null),
        preact.h("section", { class: "tv", id: Project.TV },
            preact.h(Nav, { projname: "tv production" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/c_scale,f_auto,q_80/v1629150961/tv-large-2", alt: "tv application screenshot large" }),
            preact.h(Explain, null,
                preact.h("h4", null, "design forces"),
                preact.h("p", null,
                    "the established workflow centered around a ",
                    preact.h("b", null, "huge physical board"),
                    ". design naturally departed visualising this board, a regular grid proved best after iterations."),
                preact.h("p", null,
                    "producers evaluate many items against each other. dense presentation of items that expand on mouse click provide",
                    ' ',
                    preact.h("b", null, "overview"),
                    "."),
                preact.h("p", null,
                    ' ',
                    "producers decide and act fast. ",
                    preact.h("b", null, "hovering"),
                    " an item brings up buttons to start ",
                    preact.h("b", null, "inplace editing"),
                    ". all pre production decisions are done on this single page. this aligns cognitive activity with the previous workflow at the physical board - the board always stays in front."),
                preact.h("p", null, "this is television, glamour and glory! avoided a typical 'database ui' with forms and lists. its not a game either, but tough production, so staid serious and practical. integrated corporate and program ci where possible."),
                preact.h("p", null, "other pages allow tv programming by drag and drop or ressource planning."))),
        preact.h("section", { class: "ffoqsi1", id: Project.FFoqsi },
            preact.h(Nav, { projname: "ffoqsi", total: 2, current: 1 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/c_crop,g_center,h_900,q_70,w_1300,x_20,f_auto/v1628288125/ffoqsi-large", alt: "ffoqsi web-page large" }),
            preact.h(Explain, null,
                preact.h("p", null, "research center ffoqsi had graphic elements, visual corporate identity and visual web page design ready, when they asked me to finalize the design, implement and host the page and provide a way to update site content."),
                preact.h("p", null, "developers favor github pages and static site generators to get fast hosting, version control and ease of operation for free. i took the challenge to train ffoqsi personell this developer way of site maintenance."),
                preact.h(Link, null, "http://ffoqsi.at"))),
        preact.h("section", { class: "ffoqsi2", id: Project.FFoqsi },
            preact.h(Nav, { projname: "ffoqsi", total: 2, current: 2 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto,q_30/v1629151770/ffoqsi-ssg-large", alt: "ffoqsi - static site generator" }),
            preact.h(Explain, null,
                preact.h("h4", null, "site generator"),
                preact.h("p", null, "ffoqsi personell writes content in markdown. inside markdown they use components i prepared for them, for instance components for team members, scientific partner profiles or foto galleries. the site generator 'foxygen' serves an internal preview. with a single click, by fetching a bookmarked page, the preview is published to github."),
                preact.h("p", null, "all involved persons praised this tool as being better than systems they used before. static site gens apply beyond the developer community."),
                preact.h("p", null, "the implementation is based on razor view engine's tag helpers - components in tag form."))),
        preact.h("section", { class: "discretelogics", id: Project.Discretelogics },
            preact.h(Nav, { projname: "discretelogics" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto/v1629294479/discretelogics-large", alt: "discretelogics overview large" }),
            preact.h(Explain, null,
                preact.h("p", null, "discretelogics provides tools for time series analysis and processing."),
                preact.h("p", null,
                    "wrote the teafile file format definition and 3 platform agnostic open source apis for this file format in",
                    ' ',
                    preact.h(InlineLink, { href: "https://github.com/discretelogics/TeaFiles.Net-Time-Series-Storage-in-Files" }, "c#"),
                    ",",
                    preact.h(InlineLink, { href: "https://github.com/discretelogics/TeaFiles.Cpp-Time-Series-Storage-in-Files" }, "c++"),
                    " and",
                    ' ',
                    preact.h(InlineLink, { href: "https://github.com/discretelogics/TeaFiles.Py-Time-Series-Storage-in-Files" }, "python"),
                    ". unicredit italy released one for the",
                    ' ',
                    preact.h(InlineLink, { href: "https://github.com/andreaferretti/nim-teafiles" }, "nim"),
                    " language."),
                preact.h("p", null,
                    "teahouse and teashell are windows applications, written in ",
                    preact.h("b", null, ".net"),
                    " and ",
                    preact.h("b", null, "wpf"),
                    "."),
                preact.h("p", null, "created all visuals like corporate logo, icons and the web page (with github pages + jekyll)."),
                preact.h("p", null,
                    preact.h(Link, null, "http://discretelogics.com")))),
        preact.h("section", { class: "viennageo", id: Project.ViennaGeo },
            preact.h(Nav, { projname: "vienna-geo" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto/v1628151278/viennageo", alt: "vienna-geo website screenshot large", width: 1600, height: 900 }),
            preact.h(Explain, null,
                preact.h("p", null, "simple static web page."),
                preact.h("p", null, "the page has a lighthouse score of 100/100/100/100 for desktop and 99/100/100/100 for mobile. the 1 percent off is for the short (10min) cache intervals on images. lighthouse suggests a year. well, for now that 99 score does not force me to put the images onto another host. tough netlify might be a good alternative to github pages."),
                preact.h("p", null,
                    preact.h("a", { href: "http://viennageo.github.io" }, "website"),
                    " (best on mobile phone)"))),
        preact.h("section", { class: "toolwindow", id: Project.FileStructureWindow },
            preact.h(Nav, { projname: "f# toolwindow" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/v1629155891/toolwindow-large", alt: "f# file structure toolwindow large" }),
            preact.h(Explain, null,
                preact.h("h4", null, "visual studio toolwindow"),
                preact.h("ul", null,
                    preact.h("li", null, "f# language service"),
                    preact.h("li", null, "wpf"),
                    preact.h("li", null, "visual studio integration")),
                preact.h(InlineLink, { href: "https://github.com/snuup/FSharp-File-Structure-for-Visual-Studio" }, "repository"))),
        preact.h("section", { class: "klimpt", id: Project.Klimpt },
            preact.h(Nav, { projname: "responsive web pages" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto/v1629293057/docs-pages-large", alt: "responsive web pages large", width: 1600, height: 900 }),
            preact.h(Explain, null,
                preact.h("h5", null, "use case"),
                preact.h("p", null, "the user gets the name of the doctor, is located in the train or at home, wants to inform herself and then call."),
                preact.h("h5", null, "design"),
                preact.h("ul", null,
                    preact.h("li", null, "mobile page loads in a single fetch"),
                    preact.h("li", null, "on desktop shows animated page transitions"),
                    preact.h("li", null, "can call directly: href=\"tel:0680 55 55 555\""),
                    preact.h("li", null, "google maps entry")),
                preact.h("p", null, "did not use lighthouse during development but still has 100 / 92 / 93 / 100"),
                preact.h("p", null,
                    preact.h(Link, null, "http://www.psychiater-klimpt.at"),
                    preact.h("br", null),
                    preact.h(Link, null, "http://www.psychologiezentrum.at")))),
        preact.h("section", { class: "tacidonotes", id: Project.TacidoNotes },
            preact.h(Nav, { projname: "tacido notes" }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto,q_53/v1629153619/tacido-notes-large", alt: "tacido notes large" }),
            preact.h(Explain, null,
                preact.h("p", null, "client side encrypting note taking app. built with"),
                preact.h("ul", null,
                    preact.h("li", null, "drop box js api"),
                    preact.h("li", null, "stanford javascript crypto library"),
                    preact.h("li", null, "contenteditable - i believed in this technique for a long time"),
                    preact.h("li", null, "typescript (use it since 0.8)")),
                preact.h(Link, null, "https://github.com/snuup/tacidonotes"))),
        preact.h("section", { class: "sputnik-1", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 1 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto/v1629153792/sputnik-large-1", alt: "sputnik4 screenshot 1 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "a universal recommendation service, started with events in london + vienna"),
                preact.h("p", null, "programmed in c# and c++ with in memory processing for results within 1 millisecond."),
                preact.h("p", null, "here the skin for london ..."))),
        preact.h("section", { class: "sputnik-2", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 2 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_60/v1629154099/sputnik-large-2", alt: "sputnik4 screenshot 2 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "... and here the skin for vienna"),
                preact.h("p", null,
                    "i always found skeuomorphism in screen design too dominant, underestimating users. the 5 buttons in the header are the only slight skeuomorph elements, justified as a contrast to the remainung ui, which was flat. this was in 2003, many years later flat ",
                    preact.h("span", { class: "strike" }, " was "),
                    " is en vogue. same with the large fotos that set the mood here."))),
        preact.h("section", { class: "sputnik-3", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 3 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_50/v1629154098/sputnik-large-3", alt: "sputnik4 screenshot 3 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "users read recommended events based on their own ratings and the ratings of selected other users."))),
        preact.h("section", { class: "sputnik-4", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 4 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_75/v1629185988/sputnik-large-4", alt: "sputnik4 screenshot 4 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "the weekly overview"))),
        preact.h("section", { class: "sputnik-5", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 5 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_51/v1629188267/sputnik-large-5", alt: "sputnik4 screenshot 5 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "channel selection - similar to newsgroups"))),
        preact.h("section", { class: "sputnik-6", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 6 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_49/v1629185987/sputnik-large-6", alt: "sputnik4 screenshot 6 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "users find likeminded users with similar ratings ..."))),
        preact.h("section", { class: "sputnik-7", id: Project.Sputnik4 },
            preact.h(Nav, { projname: "sputnik4", total: 7, current: 7 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/f_auto/v1629294013/sputnik-large-7", alt: "sputnik4 screenshot 7 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "and use the service on their mobile phones."))),
        preact.h("section", { class: "ba1", id: Project.BA },
            preact.h(Nav, { projname: "realtime analytics", total: 3, current: 1 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/c_crop,g_north,h_830,w_1132,x_0,y_0/v1628203320/realtime-analytics-1-large", alt: "realtime analytics 1 large" }),
            preact.h(Explain, null,
                preact.h("p", null,
                    "implemented the ",
                    preact.h("b", null, "realtime quoteboard"),
                    " (model and view), the realtime ",
                    preact.h("b", null, "news feed"),
                    " and, most challenging, the ..."))),
        preact.h("section", { class: "ba2", id: Project.BA },
            preact.h(Nav, { projname: "realtime analytics", total: 3, current: 2 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/v1628203320/realtime-analytics-2-large", alt: "realtime analytics 2 large" }),
            preact.h(Explain, null,
                preact.h("p", null,
                    preact.h("b", null, "marketprofile"),
                    ", with hover and selection features on every element and"))),
        preact.h("section", { class: "ba3", id: Project.BA },
            preact.h(Nav, { projname: "realtime analytics", total: 3, current: 3 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/c_crop,g_north,h_837/v1628203319/realtime-analytics-application-small-large", alt: "realtime analytics 3 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "fold / collapse per day."))),
        preact.h("section", { class: "chroma1", id: Project.Chroma },
            preact.h(Nav, { projname: "midi interface", total: 4, current: 1 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/c_scale,f_auto,q_10,w_1600/v1628111321/chroma1-large", alt: "rhodes chroma 1 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "the rhodes chroma synthesizer - cult."))),
        preact.h("section", { class: "chroma2", id: Project.Chroma },
            preact.h(Nav, { projname: "midi interface", total: 4, current: 2 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_30/v1628203320/chroma2-large", alt: "rhodes chroma 2 large" }),
            preact.h(Explain, null,
                preact.h("p", null, "i lived inside it while builing a midi interface for it."))),
        preact.h("section", { class: "chroma3", id: Project.Chroma },
            preact.h(Nav, { projname: "midi interface", total: 4, current: 3 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_30/v1628203320/chroma3-large", alt: "microcontroller large" }),
            preact.h(Explain, null,
                preact.h("ul", null,
                    preact.h("li", null, "soldered parallel hardware interface for commodore vic 20"),
                    preact.h("li", null, "soldered serial midi interface for commodore vic 20"),
                    preact.h("li", null, "developed software with vic 20 using raw 6502 mnemonics"),
                    preact.h("li", null, "transferred hard- and software to a rockwell 6511eab singlechip microcontroller"),
                    preact.h("li", null, "integrated the controller into the synthesizer")))),
        preact.h("section", { class: "chroma4", id: Project.Chroma },
            preact.h(Nav, { projname: "midi interface", total: 4, current: 4 }),
            preact.h(FullImg, { src: "https://res.cloudinary.com/snuu/image/upload/q_30/v1628203320/chroma4-large" }),
            preact.h(Explain, null,
                preact.h("p", null, "lets end with another picture of this wonderful synth."))),
        preact.h("section", { class: "fin" },
            preact.h("div", { class: "end-text" },
                preact.h("div", null,
                    "this is the end. but since this was in reverse chronological order, it actually is the\u00A0",
                    preact.h("span", { id: "rewind" }, "beginning"),
                    ".")),
            preact.h("div", { class: "controls" },
                preact.h("table", null,
                    preact.h(KeyMapDescription, { op: "previous slide", keys: "left-arrow" }, "swipe, mousewheel, scrollbar"),
                    preact.h(KeyMapDescription, { op: "next slide", keys: "right-arrow enter" }, "swipe, mousewheel, scrollbar"),
                    preact.h(KeyMapDescription, { op: "first slide", keys: "pos1" }, "scrollbar"),
                    preact.h(KeyMapDescription, { op: "last slide", keys: "end" }, "scrollbar"),
                    preact.h(KeyMapDescription, { op: "close gallery", keys: "esc" }, "close-button (top right corner)"),
                    preact.h(KeyMapDescription, { op: "toggle explanation", keys: "space" }, "click or touch page")))))));

let MainPage = () => {
    return (preact.h(preact.Fragment, null,
        preact.h(Gallery, null),
        preact.h(Overview, null)));
};

//render(() => <Overview />, "overview.html", "overview")
//render(() => <Gallery />, "gallery.html", "gallery")
render(() => preact.h(MainPage, null), "index.html", "main");
